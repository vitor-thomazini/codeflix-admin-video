buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.flywaydb:flyway-mysql:10.4.1'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '10.4.1'
}

group = 'vitor.thomazini.codeflixadminvideo.infrastructure'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(":application")
    implementation project(":domain")

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-afterburner'
    implementation 'io.vavr:vavr:0.10.4'

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude 'module': 'spring-boot-starter-tomcat'
    }


    testImplementation 'org.yaml:snakeyaml:1.26'
    testImplementation ('com.github.javafaker:javafaker:1.0.2') {
        exclude module: 'org.yaml'
    }

    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    testImplementation 'org.flywaydb:flyway-core'
    testImplementation 'org.flywaydb:flyway-mysql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'org.testcontainers:testcontainers:1.19.4'
    testImplementation 'org.testcontainers:mysql:1.19.4'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.4'

    testRuntimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
}

flyway {
    url = System.getenv('FLYWAY_DB') ?: 'jdbc:mysql://localhost:3306/adm_videos?useSSL=true&serverTimezone=UTC&characterEncoding=UTF-8'
    user = System.getenv('FLYWAY_USER') ?: 'root'
    password = System.getenv('FLYWAY_PASSWORD') ?: '123456'
}

tasks.named('test') {
    useJUnitPlatform()
}